--- YALMIP/@sdpvar/lt.m	2021-04-25 10:20:50.413724569 +1000
+++ YALMIP-robertgj/@sdpvar/lt.m	2021-04-25 08:49:03.081559820 +1000
@@ -11,7 +11,7 @@
 
 fh = findobj( 'Type', 'Figure', 'Name', 'Kittens don''t like <!' );
 if isempty(fh)
-    figure('Name','Kittens don''t like >!');
+    figure('Name','Kittens don''t like <!');
     imshow('strictwarning.jpg')
 end
 warning('YALMIP:strict','Strict inequalities are not supported. A non-strict has been added instead'')');
--- YALMIP/solvers/callsqplab.m	2021-04-25 10:20:50.499723862 +1000
+++ YALMIP-robertgj/solvers/callsqplab.m	2021-04-25 08:49:03.125559423 +1000
@@ -1,4 +1,4 @@
-function output = callfmincon(interfacedata)
+function output = callsqplab(interfacedata)
 
 global SQPLABDATA
 % Retrieve needed data
--- YALMIP/solvers/callpenbmim.m	2021-04-25 10:20:50.497723879 +1000
+++ YALMIP-robertgj/solvers/callpenbmim.m	2021-04-25 11:05:25.490894783 +1000
@@ -1,4 +1,4 @@
-function output = callpenbmi(interfacedata);
+function output = callpenbmim(interfacedata)
 
 if any(interfacedata.variabletype > 2)
     % Polynomial problem, YALMIP has to bilienarize
--- YALMIP/modules/global/propagate_bounds_from_separable_quadratic_equality.m	2021-04-25 10:20:50.482724002 +1000
+++ YALMIP-robertgj/modules/global/propagate_bounds_from_separable_quadratic_equality.m	2021-04-25 11:06:01.218606240 +1000
@@ -1,4 +1,4 @@
-function p = update_sumsepquad_bounds(p);
+function p = propagate_bounds_from_separable_quadratic_equality(p)
 % Looking for case z == b + q1(x1) + q2(x2) + ... where q quadratic
 
 if p.boundpropagation.sepquad
--- YALMIP/modules/global/monotonesdp.m	2021-04-25 10:20:50.481724010 +1000
+++ YALMIP-robertgj/modules/global/monotonesdp.m	2021-04-25 08:49:03.263558181 +1000
@@ -1,4 +1,4 @@
-function [upperhere,xtempwork] = monotoneSDPHeuristics(p,upper,x,aux1,aux2)
+function [upperhere,xtempwork] = monotonesdp(p,upper,x,aux1,aux2)
 x_fix = x;
 xtempwork = [];
 upperhere = inf;
--- YALMIP/modules/global/addSquaredLinearEqualityCuts.m	2021-04-25 10:20:50.478724035 +1000
+++ YALMIP-robertgj/modules/global/addSquaredLinearEqualityCuts.m	2021-04-25 08:49:03.285557983 +1000
@@ -1,4 +1,4 @@
-function p = addMultipliedEqualityCuts(p)
+function p = addSquaredLinearEqualityCuts(p)
 
 newRows = [];
 for j = 1:p.K.f
--- YALMIP/modules/global/fixandresolve.m	2021-04-25 10:20:50.480724018 +1000
+++ YALMIP-robertgj/modules/global/fixandresolve.m	2021-04-25 08:49:03.287557965 +1000
@@ -1,4 +1,4 @@
-function [upperhere,xtempwork] = monotoneSDPHeuristics(p,upper,x,aux1,aux2)
+function [upperhere,xtempwork] = fixandresolve(p,upper,x,aux1,aux2)
 xtempwork = [];
 upperhere = inf;
 
--- YALMIP/modules/sos/monomialproducts.m	2021-04-25 10:20:50.487723961 +1000
+++ YALMIP-robertgj/modules/sos/monomialproducts.m	2021-04-25 11:09:33.384892857 +1000
@@ -1,4 +1,4 @@
-function [newton_m2,N_unique,newton_m2_unique] = monomialproducts(N,n);
+function [newton_m2,N_unique,newton_m2_unique] = monomialproducts(N,n)
 %MONOMIALPRODUCTS  Internal function used for monomial reduction
 
 % Exponents in squared monomials
--- YALMIP/modules/robust/dilate.m	2021-04-25 10:20:50.485723977 +1000
+++ YALMIP-robertgj/modules/robust/dilate.m	2021-04-25 08:49:03.375557173 +1000
@@ -23,9 +23,9 @@
 % GRADUATE SCHOOL OF INFORMATION SCIENCE AND TECHNOLOGY THE UNIVERSITY OF
 % TOKYO BUNKYO-KU, TOKYO 113-8656, JAPAN , February 2006
 %
-% J. Löfberg, Improved matrix dilations for robust semidefinite programming
+% J. Lofberg, Improved matrix dilations for robust semidefinite programming
 % Division of Automatic control, Department of Electrical Engineering, 
-% Technical report 2753, Linköpings universitet, November 2006
+% Technical report 2753, Linkopings universitet, November 2006
 %
 % See also ROBUSTIFY, SOLVEROBUST, UNCERTAIN
 
--- YALMIP/modules/robust/dilate2.m	2021-04-25 10:20:50.485723977 +1000
+++ YALMIP-robertgj/modules/robust/dilate2.m	2021-04-25 08:49:03.388557056 +1000
@@ -20,9 +20,9 @@
 % GRADUATE SCHOOL OF INFORMATION SCIENCE AND TECHNOLOGY THE UNIVERSITY OF
 % TOKYO BUNKYO-KU, TOKYO 113-8656, JAPAN , February 2006
 %
-% J. Löfberg, Improved matrix dilations for robust semidefinite programming
+% J. Lofberg, Improved matrix dilations for robust semidefinite programming
 % Division of Automatic control, Department of Electrical Engineering, 
-% Technical report XXXX, Linköpings universitet, November 2006
+% Technical report XXXX, Linkopings universitet, November 2006
 %
 % See also ROBUSTIFY, SOLVEROBUST, UNCERTAIN
 
--- YALMIP/extras/jacSparsityGeometric.m	2021-04-25 10:20:50.469724109 +1000
+++ YALMIP-robertgj/extras/jacSparsityGeometric.m	2021-04-25 08:49:03.467556345 +1000
@@ -1,4 +1,4 @@
-function [Nbegcol,Nlencol,Nrowndx,Nobjcnt,Nobjndx,cJacobian] = jacSparsity(interfacedata)
+function [Nbegcol,Nlencol,Nrowndx,Nobjcnt,Nobjndx,cJacobian] = jacSparsityGeometric(interfacedata)
 
 linear = setdiff(find(interfacedata.variabletype == 0),interfacedata.evalVariables);
 oJacobian = zeros(length(linear),1);
--- YALMIP/extras/plotInternalModel.m	2021-04-25 10:20:50.471724092 +1000
+++ YALMIP-robertgj/extras/plotInternalModel.m	2021-04-25 11:13:23.519034364 +1000
@@ -96,7 +96,7 @@
 
 
 
-function [x_opt,errorstatus] = generateBoundary(internalmodel,x,n,localindex);
+function [x_opt,errorstatus] = generateBoundary(internalmodel,x,n,localindex)
 
 x_opt = [];
 phi = [];
--- YALMIP/extras/apply_oldrecursive_differentiation.m	2021-04-25 10:20:50.461724174 +1000
+++ YALMIP-robertgj/extras/apply_oldrecursive_differentiation.m	2021-04-25 11:14:02.774717334 +1000
@@ -1,4 +1,4 @@
-function dX = apply_recursive_differentiation(model,x,requested);
+function dX = apply_oldrecursive_differentiation(model,x,requested)
 dX = [];
 
 % Compute all evaluation-based derivatives df(x)
--- YALMIP/extras/fmincon_fungrad.m	2021-04-25 10:20:50.468724117 +1000
+++ YALMIP-robertgj/extras/fmincon_fungrad.m	2021-04-25 08:49:03.846552901 +1000
@@ -1,4 +1,4 @@
-function df = fmincon_fun(x,params)
+function df = fmincon_fungrad(x,params)
 
 xevaled = zeros(1,length(params.interfacedata.c));
 xevaled(params.linearindicies) = x;
