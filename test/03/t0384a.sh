#!/bin/sh

prog=surmaahoFAvLogNewton_test.m
depends="test/surmaahoFAvLogNewton_test.m test_common.m surmaahoFAvLogNewton.m \
local_max.m print_polynomial.m tf2a.m x2zp.m zp2x.m a2p.m iirP.m \
aConstraints.m allpass_phase_socp_mmse.m allpassP.m \
qroots.oct"

tmp=/tmp/$$
here=`pwd`
if [ $? -ne 0 ]; then echo "Failed pwd"; exit 1; fi

fail()
{
        echo FAILED ${0#$here"/"} $prog 1>&2
        cd $here
        rm -rf $tmp
        exit 1
}

pass()
{
        echo PASSED ${0#$here"/"} $prog
        cd $here
        rm -rf $tmp
        exit 0
}

trap "fail" 1 2 3 15
mkdir $tmp
if [ $? -ne 0 ]; then echo "Failed mkdir"; exit 1; fi
for file in $depends;do \
  cp -R src/$file $tmp; \
  if [ $? -ne 0 ]; then echo "Failed cp "$file; fail; fi \
done
cd $tmp
if [ $? -ne 0 ]; then echo "Failed cd"; fail; fi

#
# the output should look like this
#
cat > test.ok << 'EOF'
maxiter = 5000
ftol = 1.0000e-06
verbose = 0
fap = 0.1000
fas = 0.1250
dBap = 0.1000
dBas = 50
fpp = 0.080000
tp = 20
norm(delta)/norm(ak) < ftol
Solution is feasible!
abs_min_z = [   1.0000000000,   1.0000000000,   1.0000000000,   1.0000000000, ... 
                1.0000000000,   1.0000000000 ]';
angle_min_z = [  -1.6867929611,  -0.9302552851,  -0.7972774476,   0.7972774476, ... 
                  0.9302552851,   1.6867929611 ]';
abs_min_p = [   0.9685081140,   0.9685081140,   0.8946222537,   0.8273515108, ... 
                0.8032241007,   0.7895905364,   0.7895905364,   0.8946222537, ... 
                0.8032241007,   0.8273515108 ]';
angle_min_p = [  -0.6637610504,   0.6637610504,  -0.6136888590,  -0.4717031264, ... 
                 -0.2988692317,  -0.0963044378,   0.0963044378,   0.6136888590, ... 
                  0.2988692317,   0.4717031264 ]';
1z:nmin=6,nall=4,max_dBap=-0.000000,min_dBap=-0.007951,max_dBas= 50.00,min_P= -0.21,max_P=  0.00
abs_min_z = [   0.6579607032,   0.6579607032,   0.7351792081,   0.7351792081, ... 
                1.0000000000,   1.0000000000,   1.0000000000,   1.0000000000, ... 
                1.0000000000,   1.0000000000 ]';
angle_min_z = [  -0.0425643568,   0.0425643568,  -0.3772095901,   0.3772095901, ... 
                 -1.5299986801,  -0.8996762351,  -0.7949454092,   0.7949454092, ... 
                  0.8996762351,   1.5299986801 ]';
abs_min_p = [   0.8105045891,   0.8179668209,   0.7981696179,   0.8007028848, ... 
                0.8007028848,   0.7981696179,   0.8105045891,   0.8179668209, ... 
                0.8353797030,   0.9022615249,   0.9700937011,   0.8353797030, ... 
                0.9700937011,   0.9022615249 ]';
angle_min_p = [   0.3162857652,   0.4272296582,   0.1888663828,   0.0601445854, ... 
                 -0.0601445854,  -0.1888663828,  -0.3162857652,  -0.4272296582, ... 
                  0.5588085415,   0.6530296253,   0.6829436550,  -0.5588085415, ... 
                 -0.6829436550,  -0.6530296253 ]';
2z:nmin=6,nall=4,max_dBap=0.000000,min_dBap=-0.000207,max_dBas= 50.00,min_P= -0.14,max_P=  0.00
norm(delta)/norm(ak) < ftol
Solution is feasible!
abs_min_z = [   1.0000000000,   1.0000000000,   1.0000000000,   1.0000000000, ... 
                1.0000000000,   1.0000000000 ]';
angle_min_z = [  -1.5242081055,  -0.9016003747,  -0.7952021422,   0.7952021422, ... 
                  0.9016003747,   1.5242081055 ]';
abs_min_p = [   0.9690302776,   0.9690302776,   0.8966399821,   0.8966399821, ... 
                0.8149166572,   0.7671512258,   0.7468817915,   0.7453297991, ... 
                0.8149166572,   0.7468817915,   0.7671512258 ]';
angle_min_p = [   0.6791924777,  -0.6791924777,   0.6470624155,  -0.6470624155, ... 
                 -0.5459115914,  -0.3777817883,  -0.1891931809,   0.0000000000, ... 
                  0.5459115914,   0.1891931809,   0.3777817883 ]';
1z:nmin=6,nall=5,max_dBap=0.000000,min_dBap=-0.000667,max_dBas= 49.99,min_P= -0.22,max_P=  0.00
abs_min_z = [   0.5256670014,   0.5256670014,   0.6229717648,   0.6229717648, ... 
                0.6234195218,   1.0000000000,   1.0000000000,   1.0000000000, ... 
                1.0000000000,   1.0000000000,   1.0000000000 ]';
angle_min_z = [  -0.2141462959,   0.2141462959,  -0.4278501558,   0.4278501558, ... 
                 -0.0000000000,  -1.2170370182,  -0.8615038556,  -0.7921774898, ... 
                  0.7921774898,   0.8615038556,   1.2170370182 ]';
abs_min_p = [   0.9731476547,   0.9731476547,   0.9116525569,   0.8369769650, ... 
                0.7810131340,   0.7583429094,   0.7462530629,   0.7410545292, ... 
                0.7425280066,   0.7425280066,   0.7410545292,   0.9116525569, ... 
                0.7462530629,   0.7583429094,   0.8369769650,   0.7810131340 ]';
angle_min_p = [  -0.7057632822,   0.7057632822,  -0.6937264895,  -0.6440972962, ... 
                 -0.5375860075,  -0.4160724697,  -0.2971477201,  -0.1747518089, ... 
                 -0.0565072165,   0.0565072165,   0.1747518089,   0.6937264895, ... 
                  0.2971477201,   0.4160724697,   0.6440972962,   0.5375860075 ]';
2z:nmin=6,nall=5,max_dBap=0.000002,min_dBap=-0.000003,max_dBas= 50.00,min_P= -0.13,max_P=  0.02
norm(delta)/norm(ak) < ftol
Solution is feasible!
abs_min_z = [   1.0000000000,   1.0000000000,   1.0000000000,   1.0000000000, ... 
                1.0000000000,   1.0000000000,   1.0000000000 ]';
angle_min_z = [  -1.2377504561,  -0.8814739697,  -0.7940214544,   0.7940214544, ... 
                  0.8814739697,   1.2377504561,   3.1415926536 ]';
abs_min_p = [   0.9687724593,   0.8935117383,   0.9687724593,   0.8935117383, ... 
                0.7962313542,   0.7465522547,   0.7398460572,   0.7962313542, ... 
                0.7183302564,   0.7465522547,   0.7398460572 ]';
angle_min_p = [   0.6858732418,   0.6603136027,  -0.6858732418,  -0.6603136027, ... 
                 -0.5643782650,  -0.3694310565,  -0.1934719382,   0.5643782650, ... 
                  0.0000000000,   0.3694310565,   0.1934719382 ]';
1z:nmin=7,nall=4,max_dBap=0.000000,min_dBap=-0.000312,max_dBas= 50.00,min_P=  0.00,max_P=  0.11
abs_min_z = [   0.6401272682,   0.6401272682,   0.6694715004,   0.6694715004, ... 
                1.0000000000,   1.0000000000,   1.0000000000,   1.0000000000, ... 
                1.0000000000,   1.0000000000,   1.0000000000 ]';
angle_min_z = [  -0.3173648284,   0.3173648284,  -0.1937924609,   0.1937924609, ... 
                 -1.1395082491,  -0.8612573729,  -0.7923221698,   0.7923221698, ... 
                  0.8612573729,   1.1395082491,   3.1415926536 ]';
abs_min_p = [   0.7623944240,   0.7600782103,   0.7555234242,   0.7452036616, ... 
                0.7555234242,   0.7623944240,   0.7600782103,   0.7647251657, ... 
                0.7647251657,   0.8223665787,   0.8223665787,   0.9064286101, ... 
                0.9064286101,   0.9719562470,   0.9719562470 ]';
angle_min_p = [  -0.2394099905,  -0.3544572609,  -0.1298465080,   0.0000000000, ... 
                  0.1298465080,   0.2394099905,   0.3544572609,  -0.4948107870, ... 
                  0.4948107870,  -0.6315773720,   0.6315773720,  -0.6894149772, ... 
                  0.6894149772,  -0.7026579255,   0.7026579255 ]';
2z:nmin=7,nall=4,max_dBap=0.000000,min_dBap=-0.000006,max_dBas= 50.00,min_P=  0.00,max_P=  0.13
norm(delta)/norm(ak) < ftol
Solution is feasible!
abs_min_z = [   1.0000000000,   1.0000000000,   1.0000000000,   1.0000000000, ... 
                1.0000000000,   1.0000000000,   1.0000000000 ]';
angle_min_z = [  -1.1448034302,  -0.8639740076,  -0.7926146056,   0.7926146056, ... 
                  0.8639740076,   1.1448034302,   3.1415926536 ]';
abs_min_p = [   0.9706706735,   0.9706706735,   0.9009790098,   0.9009790098, ... 
                0.8062860214,   0.7226254260,   0.6976462820,   0.6928399251, ... 
                0.6928399251,   0.8062860214,   0.6976462820,   0.7226254260 ]';
angle_min_p = [  -0.6986862208,   0.6986862208,  -0.6842777423,   0.6842777423, ... 
                  0.6240568763,   0.4696579261,   0.2694147711,   0.0897735677, ... 
                 -0.0897735677,  -0.6240568763,  -0.2694147711,  -0.4696579261 ]';
1z:nmin=7,nall=5,max_dBap=-0.000000,min_dBap=-0.000025,max_dBas= 50.00,min_P= -0.01,max_P=  0.10
abs_min_z = [   0.4702792858,   0.4702792858,   0.5890540975,   0.6045629758, ... 
                0.6045629758,   1.0000000000,   1.0000000000,   1.0000000000, ... 
                1.0000000000,   1.0000000000,   1.0000000000,   1.0000000000 ]';
angle_min_z = [  -0.5379051987,   0.5379051987,  -0.0000000000,  -0.2148086066, ... 
                  0.2148086066,  -1.0117341340,  -0.8391824187,  -0.7905151929, ... 
                  0.7905151929,   0.8391824187,   1.0117341340,   3.1415926536 ]';
abs_min_p = [   0.9757783576,   0.9197735029,   0.9757783576,   0.8435386329, ... 
                0.7624170847,   0.7157430804,   0.7047012111,   0.7067884085, ... 
                0.7067040328,   0.7066400991,   0.7067040328,   0.7067884085, ... 
                0.9197735029,   0.7047012111,   0.8435386329,   0.7157430804, ... 
                0.7624170847 ]';
angle_min_p = [  -0.7204201252,  -0.7178266486,   0.7204201252,  -0.6944917344, ... 
                 -0.6132664083,  -0.4789582334,  -0.3403087223,  -0.2213279146, ... 
                 -0.1106884442,  -0.0000000000,   0.1106884442,   0.2213279146, ... 
                  0.7178266486,   0.3403087223,   0.6944917344,   0.4789582334, ... 
                  0.6132664083 ]';
2z:nmin=7,nall=5,max_dBap=0.000002,min_dBap=-0.000002,max_dBas= 50.00,min_P=  0.00,max_P=  0.11
EOF
if [ $? -ne 0 ]; then echo "Failed output cat test.ok"; fail; fi

#
# run and see if the results match
#
echo "Running $prog"
octave --no-gui -q $prog >test.out 2>&1
if [ $? -ne 0 ]; then echo "Failed running $prog"; fail; fi

diff -Bb test.ok test.out
if [ $? -ne 0 ]; then echo "Failed diff -Bb test.ok"; fail; fi

#
# this much worked
#
pass
