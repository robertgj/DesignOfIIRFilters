#!/bin/sh

prog=surmaahoFAvLogNewton_test.m
depends="surmaahoFAvLogNewton_test.m test_common.m surmaahoFAvLogNewton.m \
local_max.m print_polynomial.m tf2a.m x2zp.m zp2x.m a2p.m iirP.m \
aConstraints.m allpass_phase_socp_mmse.m allpassP.m \
qroots.m qzsolve.oct SeDuMi_1_3/"

tmp=/tmp/$$
here=`pwd`
if [ $? -ne 0 ]; then echo "Failed pwd"; exit 1; fi

fail()
{
        echo FAILED $prog 1>&2
        cd $here
        rm -rf $tmp
        exit 1
}

pass()
{
        echo PASSED $prog
        cd $here
        rm -rf $tmp
        exit 0
}

trap "fail" 1 2 3 15
mkdir $tmp
if [ $? -ne 0 ]; then echo "Failed mkdir"; exit 1; fi
echo $here
for file in $depends;do \
  cp -R src/$file $tmp; \
  if [ $? -ne 0 ]; then echo "Failed cp "$file; fail; fi \
done
cd $tmp
if [ $? -ne 0 ]; then echo "Failed cd"; fail; fi

#
# the output should look like this
#
cat > test.ok << 'EOF'
maxiter =  5000
tol =  0.0000010000
verbose = 0
fap =  0.10000
fas =  0.12500
dBap =  0.10000
dBas =  50
fpp =  0.080000
tp =  20
norm(delta)/norm(ak) < tol
Solution is feasible!
abs_min_z = [   1.0000000000,   1.0000000000,   1.0000000000,   1.0000000000, ... 
                1.0000000000,   1.0000000000 ]';
angle_min_z = [  -1.6867933407,   1.6867933407,  -0.9302553630,  -0.7972774532, ... 
                  0.7972774532,   0.9302553630 ]';
abs_min_p = [   0.9685081150,   0.9685081150,   0.7895907354,   0.7895907354, ... 
                0.8032242643,   0.8032242643,   0.8946222595,   0.8946222595, ... 
                0.8273516063,   0.8273516063 ]';
angle_min_p = [   0.6637610118,  -0.6637610118,   0.0963043851,  -0.0963043851, ... 
                  0.2988691469,  -0.2988691469,   0.6136887677,  -0.6136887677, ... 
                  0.4717029313,  -0.4717029313 ]';
1z:nmin=6,nall=4,max_dBap=-0.000000,min_dBap=-0.007951,max_dBas= 50.00,min_P= -0.21,max_P=  0.00
abs_min_z = [   0.6579613060,   0.6579613060,   0.7351796253,   0.7351796253, ... 
                1.0000000000,   1.0000000000,   1.0000000000,   1.0000000000, ... 
                1.0000000000,   1.0000000000 ]';
angle_min_z = [  -0.0425651127,   0.0425651127,  -0.3772095741,   0.3772095741, ... 
                 -0.8996763509,   0.8996763509,  -1.5299994776,  -0.7949454173, ... 
                  0.7949454173,   1.5299994776 ]';
abs_min_p = [   0.8007031379,   0.8007031379,   0.7981698430,   0.7981698430, ... 
                0.8105048096,   0.8105048096,   0.8179670321,   0.8179670321, ... 
                0.9700936966,   0.9700936966,   0.9022615150,   0.9022615150, ... 
                0.8353797590,   0.8353797590 ]';
angle_min_p = [   0.0601445529,  -0.0601445529,   0.1888662805,  -0.1888662805, ... 
                  0.3162856544,  -0.3162856544,   0.4272294402,  -0.4272294402, ... 
                  0.6829435939,  -0.6829435939,   0.6530295060,  -0.6530295060, ... 
                  0.5588082914,  -0.5588082914 ]';
2z:nmin=6,nall=4,max_dBap=0.000000,min_dBap=-0.000207,max_dBas= 50.00,min_P= -0.14,max_P=  0.00
norm(delta)/norm(ak) < tol
Solution is feasible!
abs_min_z = [   1.0000000000,   1.0000000000,   1.0000000000,   1.0000000000, ... 
                1.0000000000,   1.0000000000 ]';
angle_min_z = [  -1.5242086302,   1.5242086302,  -0.9016004503,  -0.7952021475, ... 
                  0.7952021475,   0.9016004503 ]';
abs_min_p = [   0.9690302758,   0.9690302758,   0.8966399784,   0.8966399784, ... 
                0.7453299853,   0.7468819913,   0.7468819913,   0.7671513891, ... 
                0.7671513891,   0.8149166969,   0.8149166969 ]';
angle_min_p = [   0.6791924391,  -0.6791924391,   0.6470623359,  -0.6470623359, ... 
                  0.0000000000,   0.1891931181,  -0.1891931181,   0.3777816106, ... 
                 -0.3777816106,   0.5459114139,  -0.5459114139 ]';
1z:nmin=6,nall=5,max_dBap=0.000000,min_dBap=-0.000667,max_dBas= 49.99,min_P= -0.22,max_P=  0.00
abs_min_z = [   0.5256674855,   0.5256674855,   0.6229722939,   0.6229722939, ... 
                0.6234195494,   1.0000000000,   1.0000000000,   1.0000000000, ... 
                1.0000000000,   1.0000000000,   1.0000000000 ]';
angle_min_z = [  -0.2141458987,   0.2141458987,  -0.4278496848,   0.4278496848, ... 
                 -0.0000000000,  -1.2170378928,  -0.8615039463,  -0.7921774965, ... 
                  0.7921774965,   0.8615039463,   1.2170378928 ]';
abs_min_p = [   0.7425282489,   0.7425282489,   0.7410547922,   0.7410547922, ... 
                0.9731476458,   0.9731476458,   0.7462533274,   0.7462533274, ... 
                0.7583431271,   0.7583431271,   0.9116525301,   0.9116525301, ... 
                0.7810132315,   0.7810132315,   0.8369769516,   0.8369769516 ]';
angle_min_p = [   0.0565072082,  -0.0565072082,   0.1747517515,  -0.1747517515, ... 
                  0.7057632260,  -0.7057632260,   0.2971475714,  -0.2971475714, ... 
                  0.4160722136,  -0.4160722136,   0.6937263936,  -0.6937263936, ... 
                  0.5375857045,  -0.5375857045,   0.6440970928,  -0.6440970928 ]';
2z:nmin=6,nall=5,max_dBap=0.000002,min_dBap=-0.000003,max_dBas= 50.00,min_P= -0.13,max_P=  0.02
norm(delta)/norm(ak) < tol
Solution is feasible!
abs_min_z = [   1.0000000000,   1.0000000000,   1.0000000000,   1.0000000000, ... 
                1.0000000000,   1.0000000000,   1.0000000000 ]';
angle_min_z = [  -1.2377512295,  -0.8814741321,  -0.7940214675,   0.7940214675, ... 
                  0.8814741321,   1.2377512295,   3.1415926536 ]';
abs_min_p = [   0.9687724464,   0.9687724464,   0.8935116850,   0.8935116850, ... 
                0.7398464393,   0.7398464393,   0.7183310681,   0.7465531043, ... 
                0.7465531043,   0.7962313346,   0.7962313346 ]';
angle_min_p = [   0.6858731267,  -0.6858731267,   0.6603133672,  -0.6603133672, ... 
                  0.1934719242,  -0.1934719242,   0.0000000000,   0.3694302556, ... 
                 -0.3694302556,   0.5643775857,  -0.5643775857 ]';
1z:nmin=7,nall=4,max_dBap=0.000000,min_dBap=-0.000312,max_dBas= 50.00,min_P=  0.00,max_P=  0.11
abs_min_z = [   0.6401324499,   0.6401324499,   0.6694694414,   0.6694694414, ... 
                1.0000000000,   1.0000000000,   1.0000000000,   1.0000000000, ... 
                1.0000000000,   1.0000000000,   1.0000000000 ]';
angle_min_z = [  -0.3173626189,   0.3173626189,  -0.1937912462,   0.1937912462, ... 
                 -1.1395095519,  -0.8612576077,  -0.7923221887,   0.7923221887, ... 
                  0.8612576077,   1.1395095519,   3.1415926536 ]';
abs_min_p = [   0.7555240727,   0.7555240727,   0.7623951971,   0.7623951971, ... 
                0.7452046140,   0.9719562164,   0.9719562164,   0.7600793399, ... 
                0.7600793399,   0.9064285026,   0.9064285026,   0.7647256160, ... 
                0.7647256160,   0.8223664543,   0.8223664543 ]';
angle_min_p = [   0.1298462144,  -0.1298462144,   0.2394100326,  -0.2394100326, ... 
                  0.0000000000,   0.7026577504,  -0.7026577504,   0.3544566278, ... 
                 -0.3544566278,   0.6894146697,  -0.6894146697,   0.4948094319, ... 
                 -0.4948094319,   0.6315766189,  -0.6315766189 ]';
2z:nmin=7,nall=4,max_dBap=0.000001,min_dBap=-0.000006,max_dBas= 50.00,min_P=  0.00,max_P=  0.13
norm(delta)/norm(ak) < tol
Solution is feasible!
abs_min_z = [   1.0000000000,   1.0000000000,   1.0000000000,   1.0000000000, ... 
                1.0000000000,   1.0000000000,   1.0000000000 ]';
angle_min_z = [  -0.7926146196,   0.7926146196,  -1.1448045861,  -0.8639741894, ... 
                  0.8639741894,   1.1448045861,   3.1415926536 ]';
abs_min_p = [   0.9706706567,   0.9706706567,   0.9009789526,   0.9009789526, ... 
                0.6928404275,   0.6928404275,   0.8062859884,   0.8062859884, ... 
                0.6976472069,   0.6976472069,   0.7226257698,   0.7226257698 ]';
angle_min_p = [   0.6986860998,  -0.6986860998,   0.6842775180,  -0.6842775180, ... 
                  0.0897739292,  -0.0897739292,   0.6240563305,  -0.6240563305, ... 
                  0.2694142928,  -0.2694142928,   0.4696569955,  -0.4696569955 ]';
1z:nmin=7,nall=5,max_dBap=-0.000000,min_dBap=-0.000025,max_dBas= 50.00,min_P= -0.01,max_P=  0.10
abs_min_z = [   0.4702815540,   0.4702815540,   0.5890524711,   0.6045662443, ... 
                0.6045662443,   1.0000000000,   1.0000000000,   1.0000000000, ... 
                1.0000000000,   1.0000000000,   1.0000000000,   1.0000000000 ]';
angle_min_z = [  -0.5379027668,   0.5379027668,  -0.0000000000,  -0.2148089731, ... 
                  0.2148089731,  -1.0117352928,  -0.8391826069,  -0.7905152082, ... 
                  0.7905152082,   0.8391826069,   1.0117352928,   3.1415926536 ]';
abs_min_p = [   0.9757783241,   0.9757783241,   0.7066405129,   0.7067047299, ... 
                0.7067047299,   0.7067894892,   0.7067894892,   0.9197733893, ... 
                0.9197733893,   0.7047021696,   0.7047021696,   0.8435384596, ... 
                0.8435384596,   0.7157436006,   0.7157436006,   0.7624171192, ... 
                0.7624171192 ]';
angle_min_p = [   0.7204199746,  -0.7204199746,   0.0000000000,   0.1106888044, ... 
                 -0.1106888044,   0.2213278245,  -0.2213278245,   0.7178264125, ... 
                 -0.7178264125,   0.3403078797,  -0.3403078797,   0.6944912148, ... 
                 -0.6944912148,   0.4789570456,  -0.4789570456,   0.6132653864, ... 
                 -0.6132653864 ]';
2z:nmin=7,nall=5,max_dBap=0.000002,min_dBap=-0.000002,max_dBas= 50.00,min_P=  0.00,max_P=  0.11
EOF
if [ $? -ne 0 ]; then echo "Failed output cat test.ok"; fail; fi

#
# run and see if the results match
#
echo "Running octave-cli -q " $prog
echo "warning('off');" >> .octaverc
octave-cli -q $prog > test.out 2>&1
if [ $? -ne 0 ]; then echo "Failed running $prog"; fail; fi

diff -Bb test.ok test.out
if [ $? -ne 0 ]; then echo "Failed diff -Bb test.ok"; fail; fi

#
# this much worked
#
pass
