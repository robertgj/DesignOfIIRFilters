#!/bin/sh

prog=tarczynski_frm_hilbert_test.m

depends="tarczynski_frm_hilbert_test.m test_common.m print_polynomial.m"
tmp=/tmp/$$
here=`pwd`
if [ $? -ne 0 ]; then echo "Failed pwd"; exit 1; fi

fail()
{
        echo FAILED ${0#$here"/"} $prog 1>&2
        cd $here
        rm -rf $tmp
        exit 1
}

pass()
{
        echo PASSED ${0#$here"/"} $prog
        cd $here
        rm -rf $tmp
        exit 0
}

trap "fail" 1 2 3 15
mkdir $tmp
if [ $? -ne 0 ]; then echo "Failed mkdir"; exit 1; fi
for file in $depends;do \
  cp -R src/$file $tmp; \
  if [ $? -ne 0 ]; then echo "Failed cp "$file; fail; fi \
done
cd $tmp
if [ $? -ne 0 ]; then echo "Failed cd"; fail; fi

#
# the output should look like this
#
cat > test.q1.ok << 'EOF'
q1 = [  -0.0000157032,   0.0000000000,  -0.0000255240,   0.0000000000, ... 
        -0.0000335620,   0.0000000000,  -0.0000471240,   0.0000000000, ... 
        -0.0000575134,   0.0000000000,  -0.0000654966,   0.0000000000, ... 
        -0.0000786431,   0.0000000000,  -0.0001872017,   0.0000000000, ... 
        -0.0002615723,   0.0000000000,  -0.0003032330,   0.0000000000, ... 
        -0.0003848152,   0.0000000000,  -0.0004391709,   0.0000000000, ... 
        -0.0004830558,   0.0000000000,  -0.0005580813,   0.0000000000, ... 
        -0.0003441251,   0.0000000000,  -0.0002528500,   0.0000000000, ... 
        -0.0000500961,   0.0000000000,   0.0002177736,   0.0000000000, ... 
         0.0004638528,   0.0000000000,   0.0006391742,   0.0000000000, ... 
         0.0009099754,   0.0000000000,   0.0000753485,   0.0000000000, ... 
        -0.0003493316,   0.0000000000,  -0.0009729109,   0.0000000000, ... 
        -0.0018560683,   0.0000000000,  -0.0027367030,   0.0000000000, ... 
        -0.0033806157,   0.0000000000,  -0.0043983574,   0.0000000000, ... 
        -0.0004881848,   0.0000000000,   0.0015417626,   0.0000000000, ... 
         0.0044054156,   0.0000000000,   0.0085143939,   0.0000000000, ... 
         0.0131042119,   0.0000000000,   0.0117408875,   0.0000000000, ... 
         0.0102929306,   0.0000000000,   0.0126959201,   0.0000000000, ... 
         0.0037901868,   0.0000000000,  -0.0360797657,   0.0000000000, ... 
        -0.1178854796,   0.0000000000,  -0.5478464237,   0.0000000000, ... 
         0.7192320259,   0.0000000000,   0.2913918831,   0.0000000000, ... 
         0.1940844877,   0.0000000000,   0.1510068397,   0.0000000000, ... 
         0.1009601374,   0.0000000000,   0.0463278244,   0.0000000000, ... 
        -0.0884682347,   0.0000000000,   0.2278663978,   0.0000000000, ... 
         0.1031767478,   0.0000000000,   0.0641322138,   0.0000000000, ... 
         0.0444895503,   0.0000000000,   0.0302161043,   0.0000000000, ... 
         0.0137885903,   0.0000000000,   0.0379784232,   0.0000000000, ... 
        -0.0373006942,   0.0000000000,  -0.0114671291,   0.0000000000, ... 
        -0.0060754786,   0.0000000000,  -0.0036768587,   0.0000000000, ... 
        -0.0029491493,   0.0000000000,  -0.0032412564,   0.0000000000, ... 
        -0.0089994947,   0.0000000000,   0.0088543182,   0.0000000000, ... 
         0.0027439756,   0.0000000000,   0.0015104481,   0.0000000000, ... 
         0.0010011169,   0.0000000000,   0.0009467329,   0.0000000000, ... 
         0.0012607508,   0.0000000000,   0.0037413542,   0.0000000000, ... 
        -0.0037006333,   0.0000000000,  -0.0011212672,   0.0000000000, ... 
        -0.0005431878,   0.0000000000,  -0.0002505911,   0.0000000000, ... 
        -0.0000718728,   0.0000000000,   0.0001188381,   0.0000000000, ... 
         0.0005481867,   0.0000000000,  -0.0005642562,   0.0000000000, ... 
        -0.0001738819,   0.0000000000,  -0.0000873763,   0.0000000000, ... 
        -0.0000455855,   0.0000000000,  -0.0000245106,   0.0000000000, ... 
        -0.0000084720,   0.0000000000,  -0.0000031269,   0.0000000000, ... 
         0.0000006536,   0.0000000000 ]';
EOF
if [ $? -ne 0 ]; then echo "Failed output cat test.q.ok"; fail; fi
cat > test.r2M1.ok << 'EOF'
r2M1 = [   1.0000000000,   0.0000000000,   0.0000000000,   0.0000000000, ... 
           0.0000000000,   0.0000000000,   0.0000000000,   0.0000000000, ... 
           0.0000000000,   0.0000000000,   0.0000000000,   0.0000000000, ... 
           0.0000000000,   0.0000000000,   0.2608865345,   0.0000000000, ... 
           0.0000000000,   0.0000000000,   0.0000000000,   0.0000000000, ... 
           0.0000000000,   0.0000000000,   0.0000000000,   0.0000000000, ... 
           0.0000000000,   0.0000000000,   0.0000000000,   0.0000000000, ... 
          -0.0587545928,   0.0000000000,   0.0000000000,   0.0000000000, ... 
           0.0000000000,   0.0000000000,   0.0000000000,   0.0000000000, ... 
           0.0000000000,   0.0000000000,   0.0000000000,   0.0000000000, ... 
           0.0000000000,   0.0000000000,   0.0139366142,   0.0000000000, ... 
           0.0000000000,   0.0000000000,   0.0000000000,   0.0000000000, ... 
           0.0000000000,   0.0000000000,   0.0000000000,   0.0000000000, ... 
           0.0000000000,   0.0000000000,   0.0000000000,   0.0000000000, ... 
          -0.0058553877,   0.0000000000,   0.0000000000,   0.0000000000, ... 
           0.0000000000,   0.0000000000,   0.0000000000,   0.0000000000, ... 
           0.0000000000,   0.0000000000,   0.0000000000,   0.0000000000, ... 
           0.0000000000,   0.0000000000,  -0.0009012222 ]';
EOF
if [ $? -ne 0 ]; then echo "Failed output cat test.r2M1.ok"; fail; fi
cat > test.r1.ok << 'EOF'
r1 = [   1.0000000000,  -0.2608865345,  -0.0587545928,  -0.0139366142, ... 
        -0.0058553877,   0.0009012222 ]';
EOF
if [ $? -ne 0 ]; then echo "Failed output cat test.r1.ok"; fail; fi
cat > test.u1.ok << 'EOF'
u1 = [  -0.0087121608,   0.0141607487,  -0.0186202434,   0.0261444736, ... 
        -0.0319085815,   0.0363376778,  -0.0436313831,   0.0472555571, ... 
         0.4468838074 ]';
EOF
if [ $? -ne 0 ]; then echo "Failed output cat test.u1.ok"; fail; fi
cat > test.v1.ok << 'EOF'
v1 = [   0.0003625921,   0.0017347914,  -0.0047002671,   0.0135985145, ... 
        -0.0252909457,   0.0484765853,  -0.0964700537,   0.3154063996 ]';
EOF
if [ $? -ne 0 ]; then echo "Failed output cat test.v1.ok"; fail; fi

#
# run and see if the results match
#
echo "Running $prog"

octave --no-gui -q $prog >test.out 2>&1
if [ $? -ne 0 ]; then echo "Failed running $prog"; fail; fi

diff -Bb test.q1.ok tarczynski_frm_hilbert_test_q1_coef.m
if [ $? -ne 0 ]; then echo "Failed diff -Bb test.q1.ok"; fail; fi
diff -Bb test.r2M1.ok tarczynski_frm_hilbert_test_r2M1_coef.m
if [ $? -ne 0 ]; then echo "Failed diff -Bb test.r2M1.ok"; fail; fi
diff -Bb test.r1.ok tarczynski_frm_hilbert_test_r1_coef.m
if [ $? -ne 0 ]; then echo "Failed diff -Bb test.r1.ok"; fail; fi
diff -Bb test.u1.ok tarczynski_frm_hilbert_test_u1_coef.m
if [ $? -ne 0 ]; then echo "Failed diff -Bb test.u1.ok"; fail; fi
diff -Bb test.v1.ok tarczynski_frm_hilbert_test_v1_coef.m
if [ $? -ne 0 ]; then echo "Failed diff -Bb test.v1.ok"; fail; fi


#
# this much worked
#
pass

