#!/bin/sh

prog=tarczynski_frm_hilbert_test.m

depends="test/tarczynski_frm_hilbert_test.m test_common.m delayz.m print_polynomial.m"
tmp=/tmp/$$
here=`pwd`
if [ $? -ne 0 ]; then echo "Failed pwd"; exit 1; fi

fail()
{
        echo FAILED ${0#$here"/"} $prog 1>&2
        cd $here
        rm -rf $tmp
        exit 1
}

pass()
{
        echo PASSED ${0#$here"/"} $prog
        cd $here
        rm -rf $tmp
        exit 0
}

trap "fail" 1 2 3 15
mkdir $tmp
if [ $? -ne 0 ]; then echo "Failed mkdir"; exit 1; fi
for file in $depends;do \
  cp -R src/$file $tmp; \
  if [ $? -ne 0 ]; then echo "Failed cp "$file; fail; fi \
done
cd $tmp
if [ $? -ne 0 ]; then echo "Failed cd"; fail; fi

#
# the output should look like this
#
cat > test.q1.ok << 'EOF'
q1 = [    -0.0002683377,     0.0000000000,    -0.0003806134,     0.0000000000, ... 
          -0.0005862656,     0.0000000000,    -0.0008203264,     0.0000000000, ... 
          -0.0010345481,     0.0000000000,    -0.0013889911,     0.0000000000, ... 
          -0.0020529694,     0.0000000000,    -0.0024535898,     0.0000000000, ... 
          -0.0029023514,     0.0000000000,    -0.0029204337,     0.0000000000, ... 
          -0.0032575328,     0.0000000000,    -0.0029081166,     0.0000000000, ... 
          -0.0030741360,     0.0000000000,    -0.0038348970,     0.0000000000, ... 
          -0.0042615777,     0.0000000000,    -0.0047452081,     0.0000000000, ... 
          -0.0047150267,     0.0000000000,    -0.0050048988,     0.0000000000, ... 
          -0.0045496744,     0.0000000000,    -0.0048891841,     0.0000000000, ... 
          -0.0061856086,     0.0000000000,    -0.0066357366,     0.0000000000, ... 
          -0.0073480153,     0.0000000000,    -0.0070904598,     0.0000000000, ... 
          -0.0073588980,     0.0000000000,    -0.0063688686,     0.0000000000, ... 
          -0.0065363085,     0.0000000000,    -0.0079412021,     0.0000000000, ... 
          -0.0076015208,     0.0000000000,    -0.0080129637,     0.0000000000, ... 
          -0.0070778821,     0.0000000000,    -0.0065900951,     0.0000000000, ... 
          -0.0067850538,     0.0000000000,    -0.0056414010,     0.0000000000, ... 
          -0.0009756371,     0.0000000000,    -0.0088493562,     0.0000000000, ... 
          -0.0217048599,     0.0000000000,    -0.0609118865,     0.0000000000, ... 
          -0.1435319764,     0.0000000000,    -0.5800878672,     0.0000000000, ... 
           0.6896409952,     0.0000000000,     0.2732942917,     0.0000000000, ... 
           0.1799736526,     0.0000000000,     0.1442879974,     0.0000000000, ... 
           0.1137719126,     0.0000000000,     0.0943949950,     0.0000000000, ... 
           0.0761430400,     0.0000000000,     0.0389735146,     0.0000000000, ... 
           0.0344658867,     0.0000000000,     0.0266222040,     0.0000000000, ... 
           0.0191649381,     0.0000000000,     0.0174201760,     0.0000000000, ... 
           0.0113806291,     0.0000000000,     0.0395962720,     0.0000000000, ... 
          -0.0394703772,     0.0000000000,    -0.0114882114,     0.0000000000, ... 
          -0.0044471140,     0.0000000000,    -0.0003727947,     0.0000000000, ... 
           0.0033847826,     0.0000000000,     0.0096726337,     0.0000000000, ... 
           0.0330430068,     0.0000000000,    -0.0331523328,     0.0000000000, ... 
          -0.0095792101,     0.0000000000,    -0.0039411471,     0.0000000000, ... 
          -0.0007558976,     0.0000000000,     0.0017871093,     0.0000000000, ... 
           0.0058978515,     0.0000000000,     0.0199798236,     0.0000000000, ... 
          -0.0200888432,     0.0000000000,    -0.0058046898,     0.0000000000, ... 
          -0.0023419149,     0.0000000000,    -0.0003696321,     0.0000000000, ... 
           0.0012885958,     0.0000000000,     0.0040045146,     0.0000000000, ... 
           0.0135838794,     0.0000000000,    -0.0136961194,     0.0000000000, ... 
          -0.0039086008,     0.0000000000,    -0.0018597902,     0.0000000000, ... 
          -0.0007891456,     0.0000000000,    -0.0003889923,     0.0000000000, ... 
           0.0000653187,     0.0000000000,    -0.0000339492,     0.0000000000, ... 
          -0.0000424880,     0.0000000000 ]';
EOF
if [ $? -ne 0 ]; then echo "Failed output cat test.q1.ok"; fail; fi

cat > test.r2M1.ok << 'EOF'
r2M1 = [     1.0000000000,     0.0000000000,     0.0000000000,     0.0000000000, ... 
             0.0000000000,     0.0000000000,     0.0000000000,     0.0000000000, ... 
             0.0000000000,     0.0000000000,     0.0000000000,     0.0000000000, ... 
             0.0000000000,     0.0000000000,    -0.0169550577,     0.0000000000, ... 
             0.0000000000,     0.0000000000,     0.0000000000,     0.0000000000, ... 
             0.0000000000,     0.0000000000,     0.0000000000,     0.0000000000, ... 
             0.0000000000,     0.0000000000,     0.0000000000,     0.0000000000, ... 
            -0.0630714891,     0.0000000000,     0.0000000000,     0.0000000000, ... 
             0.0000000000,     0.0000000000,     0.0000000000,     0.0000000000, ... 
             0.0000000000,     0.0000000000,     0.0000000000,     0.0000000000, ... 
             0.0000000000,     0.0000000000,    -0.0527925714,     0.0000000000, ... 
             0.0000000000,     0.0000000000,     0.0000000000,     0.0000000000, ... 
             0.0000000000,     0.0000000000,     0.0000000000,     0.0000000000, ... 
             0.0000000000,     0.0000000000,     0.0000000000,     0.0000000000, ... 
            -0.0319505099,     0.0000000000,     0.0000000000,     0.0000000000, ... 
             0.0000000000,     0.0000000000,     0.0000000000,     0.0000000000, ... 
             0.0000000000,     0.0000000000,     0.0000000000,     0.0000000000, ... 
             0.0000000000,     0.0000000000,    -0.0217587935 ]';
EOF
if [ $? -ne 0 ]; then echo "Failed output cat test.r2M1.ok"; fail; fi

cat > test.r1.ok << 'EOF'
r1 = [     1.0000000000,     0.0169550577,    -0.0630714891,     0.0527925714, ... 
          -0.0319505099,     0.0217587935 ]';
EOF
if [ $? -ne 0 ]; then echo "Failed output cat test.r1.ok"; fail; fi

cat > test.u1.ok << 'EOF'
u1 = [    -0.0061661888,     0.0087461962,    -0.0134719227,     0.0188504573, ... 
          -0.0237731032,     0.0319179244,    -0.0471756255,     0.0473271664, ... 
           0.4461491168 ]';
EOF
if [ $? -ne 0 ]; then echo "Failed output cat test.u1.ok"; fail; fi

cat > test.v1.ok << 'EOF'
v1 = [    -0.0009763415,     0.0007801252,     0.0015009733,     0.0089387379, ... 
          -0.0181339457,     0.0427365203,    -0.0898165800,     0.3132924204 ]';
EOF
if [ $? -ne 0 ]; then echo "Failed output cat test.v1.ok"; fail; fi

#
# run and see if the results match
#
echo "Running $prog"

octave --no-gui -q $prog >test.out 2>&1
if [ $? -ne 0 ]; then echo "Failed running $prog"; fail; fi

diff -Bb test.q1.ok tarczynski_frm_hilbert_test_q1_coef.m
if [ $? -ne 0 ]; then echo "Failed diff -Bb test.q1.ok"; fail; fi
diff -Bb test.r2M1.ok tarczynski_frm_hilbert_test_r2M1_coef.m
if [ $? -ne 0 ]; then echo "Failed diff -Bb test.r2M1.ok"; fail; fi
diff -Bb test.r1.ok tarczynski_frm_hilbert_test_r1_coef.m
if [ $? -ne 0 ]; then echo "Failed diff -Bb test.r1.ok"; fail; fi
diff -Bb test.u1.ok tarczynski_frm_hilbert_test_u1_coef.m
if [ $? -ne 0 ]; then echo "Failed diff -Bb test.u1.ok"; fail; fi
diff -Bb test.v1.ok tarczynski_frm_hilbert_test_v1_coef.m
if [ $? -ne 0 ]; then echo "Failed diff -Bb test.v1.ok"; fail; fi


#
# this much worked
#
pass

