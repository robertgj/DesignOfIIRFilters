#!/bin/sh

prog=tarczynski_frm_hilbert_test.m

depends="tarczynski_frm_hilbert_test.m test_common.m print_polynomial.m"
tmp=/tmp/$$
here=`pwd`
if [ $? -ne 0 ]; then echo "Failed pwd"; exit 1; fi

fail()
{
        echo FAILED ${0#$here"/"} $prog 1>&2
        cd $here
        rm -rf $tmp
        exit 1
}

pass()
{
        echo PASSED ${0#$here"/"} $prog
        cd $here
        rm -rf $tmp
        exit 0
}

trap "fail" 1 2 3 15
mkdir $tmp
if [ $? -ne 0 ]; then echo "Failed mkdir"; exit 1; fi
for file in $depends;do \
  cp -R src/$file $tmp; \
  if [ $? -ne 0 ]; then echo "Failed cp "$file; fail; fi \
done
cd $tmp
if [ $? -ne 0 ]; then echo "Failed cd"; fail; fi

#
# the output should look like this
#
cat > test.q1.ok << 'EOF'
q1 = [  -0.0000157092,   0.0000000000,  -0.0000255342,   0.0000000000, ... 
        -0.0000335732,   0.0000000000,  -0.0000471415,   0.0000000000, ... 
        -0.0000575282,   0.0000000000,  -0.0000655124,   0.0000000000, ... 
        -0.0000786573,   0.0000000000,  -0.0001872346,   0.0000000000, ... 
        -0.0002616154,   0.0000000000,  -0.0003032712,   0.0000000000, ... 
        -0.0003848675,   0.0000000000,  -0.0004391898,   0.0000000000, ... 
        -0.0004830673,   0.0000000000,  -0.0005580641,   0.0000000000, ... 
        -0.0003440594,   0.0000000000,  -0.0002527111,   0.0000000000, ... 
        -0.0000499766,   0.0000000000,   0.0002179942,   0.0000000000, ... 
         0.0004639797,   0.0000000000,   0.0006392951,   0.0000000000, ... 
         0.0009100131,   0.0000000000,   0.0000752006,   0.0000000000, ... 
        -0.0003497220,   0.0000000000,  -0.0009732577,   0.0000000000, ... 
        -0.0018567744,   0.0000000000,  -0.0027370980,   0.0000000000, ... 
        -0.0033810133,   0.0000000000,  -0.0043984884,   0.0000000000, ... 
        -0.0004873945,   0.0000000000,   0.0015436358,   0.0000000000, ... 
         0.0044071435,   0.0000000000,   0.0085177593,   0.0000000000, ... 
         0.0131034249,   0.0000000000,   0.0117395249,   0.0000000000, ... 
         0.0102871870,   0.0000000000,   0.0126951540,   0.0000000000, ... 
         0.0037885052,   0.0000000000,  -0.0360788171,   0.0000000000, ... 
        -0.1178825021,   0.0000000000,  -0.5478450820,   0.0000000000, ... 
         0.7192332494,   0.0000000000,   0.2913919465,   0.0000000000, ... 
         0.1940863164,   0.0000000000,   0.1510056116,   0.0000000000, ... 
         0.1009591464,   0.0000000000,   0.0463191530,   0.0000000000, ... 
        -0.0884907383,   0.0000000000,   0.2278947132,   0.0000000000, ... 
         0.1031923343,   0.0000000000,   0.0641408623,   0.0000000000, ... 
         0.0444985261,   0.0000000000,   0.0302219231,   0.0000000000, ... 
         0.0137925488,   0.0000000000,   0.0379845039,   0.0000000000, ... 
        -0.0373051213,   0.0000000000,  -0.0114690745,   0.0000000000, ... 
        -0.0060766655,   0.0000000000,  -0.0036779172,   0.0000000000, ... 
        -0.0029499444,   0.0000000000,  -0.0032421627,   0.0000000000, ... 
        -0.0090009185,   0.0000000000,   0.0088553880,   0.0000000000, ... 
         0.0027444517,   0.0000000000,   0.0015107332,   0.0000000000, ... 
         0.0010013669,   0.0000000000,   0.0009468937,   0.0000000000, ... 
         0.0012608983,   0.0000000000,   0.0037414379,   0.0000000000, ... 
        -0.0037006179,   0.0000000000,  -0.0011212950,   0.0000000000, ... 
        -0.0005432083,   0.0000000000,  -0.0002506193,   0.0000000000, ... 
        -0.0000718797,   0.0000000000,   0.0001188472,   0.0000000000, ... 
         0.0005483117,   0.0000000000,  -0.0005644181,   0.0000000000, ... 
        -0.0001739306,   0.0000000000,  -0.0000874029,   0.0000000000, ... 
        -0.0000456040,   0.0000000000,  -0.0000245218,   0.0000000000, ... 
        -0.0000084802,   0.0000000000,  -0.0000031308,   0.0000000000, ... 
         0.0000006512,   0.0000000000 ]';
EOF
if [ $? -ne 0 ]; then echo "Failed output cat test.q.ok"; fail; fi
cat > test.r2M1.ok << 'EOF'
r2M1 = [   1.0000000000,   0.0000000000,   0.0000000000,   0.0000000000, ... 
           0.0000000000,   0.0000000000,   0.0000000000,   0.0000000000, ... 
           0.0000000000,   0.0000000000,   0.0000000000,   0.0000000000, ... 
           0.0000000000,   0.0000000000,   0.2609260319,   0.0000000000, ... 
           0.0000000000,   0.0000000000,   0.0000000000,   0.0000000000, ... 
           0.0000000000,   0.0000000000,   0.0000000000,   0.0000000000, ... 
           0.0000000000,   0.0000000000,   0.0000000000,   0.0000000000, ... 
          -0.0587625820,   0.0000000000,   0.0000000000,   0.0000000000, ... 
           0.0000000000,   0.0000000000,   0.0000000000,   0.0000000000, ... 
           0.0000000000,   0.0000000000,   0.0000000000,   0.0000000000, ... 
           0.0000000000,   0.0000000000,   0.0139385163,   0.0000000000, ... 
           0.0000000000,   0.0000000000,   0.0000000000,   0.0000000000, ... 
           0.0000000000,   0.0000000000,   0.0000000000,   0.0000000000, ... 
           0.0000000000,   0.0000000000,   0.0000000000,   0.0000000000, ... 
          -0.0058554233,   0.0000000000,   0.0000000000,   0.0000000000, ... 
           0.0000000000,   0.0000000000,   0.0000000000,   0.0000000000, ... 
           0.0000000000,   0.0000000000,   0.0000000000,   0.0000000000, ... 
           0.0000000000,   0.0000000000,  -0.0009014515 ]';
EOF
if [ $? -ne 0 ]; then echo "Failed output cat test.r2M1.ok"; fail; fi
cat > test.r1.ok << 'EOF'
r1 = [   1.0000000000,  -0.2609260319,  -0.0587625820,  -0.0139385163, ... 
        -0.0058554233,   0.0009014515 ]';
EOF
if [ $? -ne 0 ]; then echo "Failed output cat test.r1.ok"; fail; fi
cat > test.u1.ok << 'EOF'
u1 = [  -0.0087132800,   0.0141628086,  -0.0186217524,   0.0261475722, ... 
        -0.0319086597,   0.0363371715,  -0.0436281472,   0.0472541936, ... 
         0.4468873562 ]';
EOF
if [ $? -ne 0 ]; then echo "Failed output cat test.u1.ok"; fail; fi
cat > test.v1.ok << 'EOF'
v1 = [   0.0003611785,   0.0017365163,  -0.0047036270,   0.0136012900, ... 
        -0.0252947842,   0.0484789953,  -0.0964725425,   0.3154067556 ]';
EOF
if [ $? -ne 0 ]; then echo "Failed output cat test.v1.ok"; fail; fi

#
# run and see if the results match
#
echo "Running $prog"

octave --no-gui -q $prog >test.out 2>&1
if [ $? -ne 0 ]; then echo "Failed running $prog"; fail; fi

diff -Bb test.q1.ok tarczynski_frm_hilbert_test_q1_coef.m
if [ $? -ne 0 ]; then echo "Failed diff -Bb test.q1.ok"; fail; fi
diff -Bb test.r2M1.ok tarczynski_frm_hilbert_test_r2M1_coef.m
if [ $? -ne 0 ]; then echo "Failed diff -Bb test.r2M1.ok"; fail; fi
diff -Bb test.r1.ok tarczynski_frm_hilbert_test_r1_coef.m
if [ $? -ne 0 ]; then echo "Failed diff -Bb test.r1.ok"; fail; fi
diff -Bb test.u1.ok tarczynski_frm_hilbert_test_u1_coef.m
if [ $? -ne 0 ]; then echo "Failed diff -Bb test.u1.ok"; fail; fi
diff -Bb test.v1.ok tarczynski_frm_hilbert_test_v1_coef.m
if [ $? -ne 0 ]; then echo "Failed diff -Bb test.v1.ok"; fail; fi


#
# this much worked
#
pass

