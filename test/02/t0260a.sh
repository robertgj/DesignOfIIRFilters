#!/bin/sh

prog=tarczynski_frm_hilbert_test.m

depends="test/tarczynski_frm_hilbert_test.m test_common.m print_polynomial.m"
tmp=/tmp/$$
here=`pwd`
if [ $? -ne 0 ]; then echo "Failed pwd"; exit 1; fi

fail()
{
        echo FAILED ${0#$here"/"} $prog 1>&2
        cd $here
        rm -rf $tmp
        exit 1
}

pass()
{
        echo PASSED ${0#$here"/"} $prog
        cd $here
        rm -rf $tmp
        exit 0
}

trap "fail" 1 2 3 15
mkdir $tmp
if [ $? -ne 0 ]; then echo "Failed mkdir"; exit 1; fi
for file in $depends;do \
  cp -R src/$file $tmp; \
  if [ $? -ne 0 ]; then echo "Failed cp "$file; fail; fi \
done
cd $tmp
if [ $? -ne 0 ]; then echo "Failed cd"; fail; fi

#
# the output should look like this
#
cat > test.q1.ok << 'EOF'
q1 = [    -0.0002683377,     0.0000000000,    -0.0003806134,     0.0000000000, ... 
          -0.0005862656,     0.0000000000,    -0.0008203265,     0.0000000000, ... 
          -0.0010345481,     0.0000000000,    -0.0013889911,     0.0000000000, ... 
          -0.0020529695,     0.0000000000,    -0.0024535900,     0.0000000000, ... 
          -0.0029023515,     0.0000000000,    -0.0029204337,     0.0000000000, ... 
          -0.0032575330,     0.0000000000,    -0.0029081166,     0.0000000000, ... 
          -0.0030741360,     0.0000000000,    -0.0038348971,     0.0000000000, ... 
          -0.0042615778,     0.0000000000,    -0.0047452082,     0.0000000000, ... 
          -0.0047150268,     0.0000000000,    -0.0050048989,     0.0000000000, ... 
          -0.0045496744,     0.0000000000,    -0.0048891842,     0.0000000000, ... 
          -0.0061856088,     0.0000000000,    -0.0066357369,     0.0000000000, ... 
          -0.0073480156,     0.0000000000,    -0.0070904600,     0.0000000000, ... 
          -0.0073588983,     0.0000000000,    -0.0063688688,     0.0000000000, ... 
          -0.0065363086,     0.0000000000,    -0.0079412023,     0.0000000000, ... 
          -0.0076015208,     0.0000000000,    -0.0080129638,     0.0000000000, ... 
          -0.0070778821,     0.0000000000,    -0.0065900951,     0.0000000000, ... 
          -0.0067850569,     0.0000000000,    -0.0056414025,     0.0000000000, ... 
          -0.0009756381,     0.0000000000,    -0.0088493530,     0.0000000000, ... 
          -0.0217048582,     0.0000000000,    -0.0609118900,     0.0000000000, ... 
          -0.1435319755,     0.0000000000,    -0.5800878683,     0.0000000000, ... 
           0.6896409954,     0.0000000000,     0.2732942920,     0.0000000000, ... 
           0.1799736545,     0.0000000000,     0.1442879969,     0.0000000000, ... 
           0.1137719101,     0.0000000000,     0.0943949958,     0.0000000000, ... 
           0.0761430401,     0.0000000000,     0.0389735186,     0.0000000000, ... 
           0.0344658880,     0.0000000000,     0.0266222036,     0.0000000000, ... 
           0.0191649391,     0.0000000000,     0.0174201782,     0.0000000000, ... 
           0.0113806292,     0.0000000000,     0.0395962728,     0.0000000000, ... 
          -0.0394703778,     0.0000000000,    -0.0114882115,     0.0000000000, ... 
          -0.0044471143,     0.0000000000,    -0.0003727946,     0.0000000000, ... 
           0.0033847830,     0.0000000000,     0.0096726340,     0.0000000000, ... 
           0.0330430083,     0.0000000000,    -0.0331523343,     0.0000000000, ... 
          -0.0095792105,     0.0000000000,    -0.0039411475,     0.0000000000, ... 
          -0.0007558977,     0.0000000000,     0.0017871094,     0.0000000000, ... 
           0.0058978515,     0.0000000000,     0.0199798235,     0.0000000000, ... 
          -0.0200888432,     0.0000000000,    -0.0058046898,     0.0000000000, ... 
          -0.0023419150,     0.0000000000,    -0.0003696320,     0.0000000000, ... 
           0.0012885960,     0.0000000000,     0.0040045147,     0.0000000000, ... 
           0.0135838801,     0.0000000000,    -0.0136961202,     0.0000000000, ... 
          -0.0039086011,     0.0000000000,    -0.0018597904,     0.0000000000, ... 
          -0.0007891456,     0.0000000000,    -0.0003889923,     0.0000000000, ... 
           0.0000653187,     0.0000000000,    -0.0000339492,     0.0000000000, ... 
          -0.0000424881,     0.0000000000 ]';
EOF
if [ $? -ne 0 ]; then echo "Failed output cat test.q1.ok"; fail; fi

cat > test.r2M1.ok << 'EOF'
r2M1 = [     1.0000000000,     0.0000000000,     0.0000000000,     0.0000000000, ... 
             0.0000000000,     0.0000000000,     0.0000000000,     0.0000000000, ... 
             0.0000000000,     0.0000000000,     0.0000000000,     0.0000000000, ... 
             0.0000000000,     0.0000000000,    -0.0169550545,     0.0000000000, ... 
             0.0000000000,     0.0000000000,     0.0000000000,     0.0000000000, ... 
             0.0000000000,     0.0000000000,     0.0000000000,     0.0000000000, ... 
             0.0000000000,     0.0000000000,     0.0000000000,     0.0000000000, ... 
            -0.0630714901,     0.0000000000,     0.0000000000,     0.0000000000, ... 
             0.0000000000,     0.0000000000,     0.0000000000,     0.0000000000, ... 
             0.0000000000,     0.0000000000,     0.0000000000,     0.0000000000, ... 
             0.0000000000,     0.0000000000,    -0.0527925737,     0.0000000000, ... 
             0.0000000000,     0.0000000000,     0.0000000000,     0.0000000000, ... 
             0.0000000000,     0.0000000000,     0.0000000000,     0.0000000000, ... 
             0.0000000000,     0.0000000000,     0.0000000000,     0.0000000000, ... 
            -0.0319505098,     0.0000000000,     0.0000000000,     0.0000000000, ... 
             0.0000000000,     0.0000000000,     0.0000000000,     0.0000000000, ... 
             0.0000000000,     0.0000000000,     0.0000000000,     0.0000000000, ... 
             0.0000000000,     0.0000000000,    -0.0217587947 ]';
EOF
if [ $? -ne 0 ]; then echo "Failed output cat test.r2M1.ok"; fail; fi

cat > test.r1.ok << 'EOF'
r1 = [     1.0000000000,     0.0169550545,    -0.0630714901,     0.0527925737, ... 
          -0.0319505098,     0.0217587947 ]';
EOF
if [ $? -ne 0 ]; then echo "Failed output cat test.r1.ok"; fail; fi

cat > test.u1.ok << 'EOF'
u1 = [    -0.0061661897,     0.0087461966,    -0.0134719224,     0.0188504576, ... 
          -0.0237731025,     0.0319179244,    -0.0471756256,     0.0473271657, ... 
           0.4461491168 ]';
EOF
if [ $? -ne 0 ]; then echo "Failed output cat test.u1.ok"; fail; fi

cat > test.v1.ok << 'EOF'
v1 = [    -0.0009763432,     0.0007801261,     0.0015009727,     0.0089387374, ... 
          -0.0181339454,     0.0427365219,    -0.0898165800,     0.3132924205 ]';
EOF
if [ $? -ne 0 ]; then echo "Failed output cat test.v1.ok"; fail; fi

#
# run and see if the results match
#
echo "Running $prog"

octave --no-gui -q $prog >test.out 2>&1
if [ $? -ne 0 ]; then echo "Failed running $prog"; fail; fi

diff -Bb test.q1.ok tarczynski_frm_hilbert_test_q1_coef.m
if [ $? -ne 0 ]; then echo "Failed diff -Bb test.q1.ok"; fail; fi
diff -Bb test.r2M1.ok tarczynski_frm_hilbert_test_r2M1_coef.m
if [ $? -ne 0 ]; then echo "Failed diff -Bb test.r2M1.ok"; fail; fi
diff -Bb test.r1.ok tarczynski_frm_hilbert_test_r1_coef.m
if [ $? -ne 0 ]; then echo "Failed diff -Bb test.r1.ok"; fail; fi
diff -Bb test.u1.ok tarczynski_frm_hilbert_test_u1_coef.m
if [ $? -ne 0 ]; then echo "Failed diff -Bb test.u1.ok"; fail; fi
diff -Bb test.v1.ok tarczynski_frm_hilbert_test_v1_coef.m
if [ $? -ne 0 ]; then echo "Failed diff -Bb test.v1.ok"; fail; fi


#
# this much worked
#
pass

