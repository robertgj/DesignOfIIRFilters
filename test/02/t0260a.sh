#!/bin/sh

prog=tarczynski_frm_hilbert_test.m

depends="tarczynski_frm_hilbert_test.m test_common.m print_polynomial.m"
tmp=/tmp/$$
here=`pwd`
if [ $? -ne 0 ]; then echo "Failed pwd"; exit 1; fi

fail()
{
        echo FAILED $prog 1>&2
        cd $here
        rm -rf $tmp
        exit 1
}

pass()
{
        echo PASSED $prog
        cd $here
        rm -rf $tmp
        exit 0
}

trap "fail" 1 2 3 15
mkdir $tmp
if [ $? -ne 0 ]; then echo "Failed mkdir"; exit 1; fi
echo $here
for file in $depends;do \
  cp -R src/$file $tmp; \
  if [ $? -ne 0 ]; then echo "Failed cp "$file; fail; fi \
done
cd $tmp
if [ $? -ne 0 ]; then echo "Failed cd"; fail; fi

#
# the output should look like this
#
cat > test.q1.ok << 'EOF'
q1 = [  -0.000016,   0.000000,  -0.000026,   0.000000, ... 
        -0.000034,   0.000000,  -0.000048,   0.000000, ... 
        -0.000058,   0.000000,  -0.000066,   0.000000, ... 
        -0.000080,   0.000000,  -0.000188,   0.000000, ... 
        -0.000262,   0.000000,  -0.000303,   0.000000, ... 
        -0.000384,   0.000000,  -0.000438,   0.000000, ... 
        -0.000481,   0.000000,  -0.000556,   0.000000, ... 
        -0.000343,   0.000000,  -0.000253,   0.000000, ... 
        -0.000051,   0.000000,   0.000215,   0.000000, ... 
         0.000461,   0.000000,   0.000634,   0.000000, ... 
         0.000905,   0.000000,   0.000074,   0.000000, ... 
        -0.000349,   0.000000,  -0.000970,   0.000000, ... 
        -0.001849,   0.000000,  -0.002730,   0.000000, ... 
        -0.003369,   0.000000,  -0.004389,   0.000000, ... 
        -0.000495,   0.000000,   0.001526,   0.000000, ... 
         0.004379,   0.000000,   0.008473,   0.000000, ... 
         0.013115,   0.000000,   0.011721,   0.000000, ... 
         0.010341,   0.000000,   0.012725,   0.000000, ... 
         0.003814,   0.000000,  -0.036090,   0.000000, ... 
        -0.117938,   0.000000,  -0.547925,   0.000000, ... 
         0.719169,   0.000000,   0.291357,   0.000000, ... 
         0.194082,   0.000000,   0.151053,   0.000000, ... 
         0.101028,   0.000000,   0.046466,   0.000000, ... 
        -0.088084,   0.000000,   0.227357,   0.000000, ... 
         0.102940,   0.000000,   0.063980,   0.000000, ... 
         0.044381,   0.000000,   0.030130,   0.000000, ... 
         0.013716,   0.000000,   0.037836,   0.000000, ... 
        -0.037177,   0.000000,  -0.011420,   0.000000, ... 
        -0.006046,   0.000000,  -0.003654,   0.000000, ... 
        -0.002928,   0.000000,  -0.003215,   0.000000, ... 
        -0.008936,   0.000000,   0.008795,   0.000000, ... 
         0.002723,   0.000000,   0.001498,   0.000000, ... 
         0.000992,   0.000000,   0.000939,   0.000000, ... 
         0.001251,   0.000000,   0.003716,   0.000000, ... 
        -0.003676,   0.000000,  -0.001113,   0.000000, ... 
        -0.000539,   0.000000,  -0.000247,   0.000000, ... 
        -0.000069,   0.000000,   0.000122,   0.000000, ... 
         0.000557,   0.000000,  -0.000572,   0.000000, ... 
        -0.000176,   0.000000,  -0.000089,   0.000000, ... 
        -0.000046,   0.000000,  -0.000025,   0.000000, ... 
        -0.000009,   0.000000,  -0.000003,   0.000000, ... 
         0.000001,   0.000000 ]';
EOF
if [ $? -ne 0 ]; then echo "Failed output cat test.q1.ok"; fail; fi
cat > test.r2M1.ok << 'EOF'
r2M1 = [   1.000000,   0.000000,   0.000000,   0.000000, ... 
           0.000000,   0.000000,   0.000000,   0.000000, ... 
           0.000000,   0.000000,   0.000000,   0.000000, ... 
           0.000000,   0.000000,   0.260153,   0.000000, ... 
           0.000000,   0.000000,   0.000000,   0.000000, ... 
           0.000000,   0.000000,   0.000000,   0.000000, ... 
           0.000000,   0.000000,   0.000000,   0.000000, ... 
          -0.058542,   0.000000,   0.000000,   0.000000, ... 
           0.000000,   0.000000,   0.000000,   0.000000, ... 
           0.000000,   0.000000,   0.000000,   0.000000, ... 
           0.000000,   0.000000,   0.013839,   0.000000, ... 
           0.000000,   0.000000,   0.000000,   0.000000, ... 
           0.000000,   0.000000,   0.000000,   0.000000, ... 
           0.000000,   0.000000,   0.000000,   0.000000, ... 
          -0.005816,   0.000000,   0.000000,   0.000000, ... 
           0.000000,   0.000000,   0.000000,   0.000000, ... 
           0.000000,   0.000000,   0.000000,   0.000000, ... 
           0.000000,   0.000000,  -0.000914 ]';
EOF
if [ $? -ne 0 ]; then echo "Failed output cat test.r2M1.ok"; fail; fi
cat > test.r1.ok << 'EOF'
r1 = [   1.000000,  -0.260153,  -0.058542,  -0.013839, ... 
        -0.005816,   0.000914 ]';
EOF
if [ $? -ne 0 ]; then echo "Failed output cat test.r1.ok"; fail; fi
cat > test.u1.ok << 'EOF'
u1 = [  -0.008703,   0.014146,  -0.018596,   0.026109, ... 
        -0.031905,   0.036317,  -0.043662,   0.047295, ... 
         0.446829 ]';
EOF
if [ $? -ne 0 ]; then echo "Failed output cat test.u1.ok"; fail; fi
cat > test.v1.ok << 'EOF'
v1 = [   0.000383,   0.001720,  -0.004660,   0.013556, ... 
        -0.025243,   0.048435,  -0.096437,   0.315415 ]';
EOF
if [ $? -ne 0 ]; then echo "Failed output cat test.v1.ok"; fail; fi

#
# run and see if the results match
#
echo "Running octave-cli -q " $prog

octave-cli -q $prog > test.out
if [ $? -ne 0 ]; then echo "Failed running $prog"; fail; fi

diff -Bb test.q1.ok tarczynski_frm_hilbert_test_q1_coef.m
if [ $? -ne 0 ]; then echo "Failed diff -Bb test.q1.ok"; fail; fi
diff -Bb test.r2M1.ok tarczynski_frm_hilbert_test_r2M1_coef.m
if [ $? -ne 0 ]; then echo "Failed diff -Bb test.r2M1.ok"; fail; fi
diff -Bb test.r1.ok tarczynski_frm_hilbert_test_r1_coef.m
if [ $? -ne 0 ]; then echo "Failed diff -Bb test.r1.ok"; fail; fi
diff -Bb test.u1.ok tarczynski_frm_hilbert_test_u1_coef.m
if [ $? -ne 0 ]; then echo "Failed diff -Bb test.u1.ok"; fail; fi
diff -Bb test.v1.ok tarczynski_frm_hilbert_test_v1_coef.m
if [ $? -ne 0 ]; then echo "Failed diff -Bb test.v1.ok"; fail; fi


#
# this much worked
#
pass

